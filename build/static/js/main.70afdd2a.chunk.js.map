{"version":3,"sources":["FormattedDate.js","WeatherIcon.js","WeatherTemperature.js","WeatherInfo.js","Weather.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","day","date","getDay","hours","getHours","minutes","getMinutes","WeatherIcon","icon","code","color","size","animate","WeatherTemperature","useState","unit","setUnit","className","Math","round","celsius","href","onClick","event","preventDefault","fahrenheit","WeatherInfo","data","city","description","temperature","humidity","wind","Weather","defaultCity","setCity","ready","weatherData","setWeatherData","handleResponse","response","main","temp","Date","dt","weather","speed","name","search","apiUrl","axios","get","then","onSubmit","type","placeholder","autoFocus","onChange","target","value","App","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70afdd2a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FormattedDate(props) {\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[props.date.getDay()];\n    let hours = props.date.getHours();\n    if (hours < 10) {\n        hours = `0${hours}`\n    }\n    let minutes = props.date.getMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`\n    }\n    return <div>\n        {day} {hours}:{minutes}\n    </div>\n}","import React from \"react\";\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nexport default function WeatherIcon(props) {\nconst codeMapping = {\n    \"01d\": \"CLEAR_DAY\",\n    \"01n\": \"CLEAR_NIGHT\",\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"03d\": \"PARTLY_CLOUDY_DAY\",\n    \"03n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"04d\": \"CLOUDY\",\n    \"04n\": \"CLOUDY\",\n    \"09d\": \"RAIN\",\n    \"09n\": \"RAIN\",\n    \"10d\": \"RAIN\",\n    \"10n\": \"RAIN\",\n    \"11d\": \"RAIN\",\n    \"11n\": \"RAIN\",\n    \"13d\": \"SNOW\",\n    \"13\": \"SNOW\",\n    \"50d\": \"FOG\",\n};\n\n    return  ( \n    <ReactAnimatedWeather\n    icon={codeMapping[props.code]}\n    color=\"blue\"\n    size={52}\n    animate={true}\n  />\n);\n}","import React, { useState } from \"react\";\n\nexport default function WeatherTemperature(props) {\nconst [unit, setUnit] = useState(\"celsius\");\n\nfunction showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n}\n\n\nfunction showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n}\n\n\nif (unit === 'celsius') {\n    return (\n        <div className=\"WeatherTemperature\">\n               <span className=\"temperature\">{Math.round(props.celsius)}</span>\n               <span className=\"unit\">˚C | {\" \"} <a href=\"/\" onClick={showFahrenheit}>˚F</a></span>\n        </div>\n    );\n    } else {\n        let fahrenheit = (props.celsius * 9/5) + 32;\n        return (\n       <div className=\"WeatherTemperature\">\n     <span className=\"temperature\">{Math.round(fahrenheit)}</span>\n     <span className=\"unit\">\n <a href=\"/\" onClick={showCelsius}>˚C</a>{\" \"}|˚F</span>\n        </div> );\n}\n}","import React from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport WeatherTemperature from \"./WeatherTemperature\";\n\nexport default function WeatherInfo(props) {\nreturn (\n<div className=\"WeatherInfo\"> \n<h1>{props.data.city}</h1>\n           <ul>\n               <li>\n                 <FormattedDate date={props.data.date} />\n               </li>\n               <li className=\"text-capitalize\">\n                   {props.data.description}\n               </li>\n           </ul>\n           <div className=\"row mt-3\">\n             <div className=\"col-6\">\n               <div className=\"clearfix\">\n                 <div className=\"float-left\">\n                 <WeatherIcon code={props.data.icon} /></div>\n               <div className=\"float-left\">\n                 <WeatherTemperature celsius={props.data.temperature} />\n               </div>\n               </div>\n           </div>\n           <div className=\"col-6\">\n             <ul>\n               <li>\n                 Humidity: {props.data.humidity}%\n               </li>\n               <li>\n                 Wind: {Math.round(props.data.wind)} km/H\n               </li>\n             </ul>\n           </div>\n           </div>\n           </div>);\n           }","import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.defaultCity);\nconst [weatherData, setWeatherData] = useState({ready: false});\nfunction handleResponse(response) {\n  setWeatherData({\n    ready: true,\n    temperature: response.data.main.temp,\n    humidity: response.data.main.humidity,\n    date: new Date(response.data.dt * 1000),\n    description: response.data.weather[0].description,\n    icon: response.data.weather[0].icon,\n    wind: response.data.wind.speed,\n    city: response.data.name\n  });\n}\n\nfunction search() {\n\n  const apiKey = \"3a5b83d2290ca8aeea736a82a10e7ea7\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  axios.get(apiUrl).then(handleResponse);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  search();\n}\n\nfunction handleCityChange(event){\nsetCity(event.target.value);\n}\n\nif (weatherData.ready) {\n  return (\n        <div className=\"Weather\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-9\">\n            <input type=\"search\" placeholder=\"Search city...\" className=\"form-control\" autoFocus=\"on\" onChange={handleCityChange} />\n            </div>\n              <div className=\"col-3\">\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-primary w-100\" />\n            </div>\n            </div>\n          </form>\n          <WeatherInfo data={weatherData} />\n            </div>\n    )\n} else {\n  search();\n    return \"Loading...\"\n}\n}","import './App.css';\nimport Weather from \"./Weather\";\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n<div className=\"container\">\n<Weather defaultCity=\"London\" />\n<br />\n        <footer>\n          This project was coded by <a href=\"https://www.alineclaudio.com\" target=\"_blank\" rel=\"noreferrer\"> Aline Claudio</a> and is open-sourced on <a href=\"https://github.com/alineolic/new-react-weather-app\" target=\"_blank\" rel=\"noreferrer\">GitHub</a> and hosted on <a href=\"https://app.netlify.com/\" target=\"_blank\" rel=\"noreferrer\">Netlify</a>.\n        </footer>\n</div>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}